/*
 * sonar.c
 *
 *  Created on: Jan 25, 2024
 *      Author: Kim YR
 */



#include "sonar.h"

extern TIM_HandleTypeDef htim1;





uint32_t overflows = 0U;


void sonar_timer_init(void) {
	HAL_TIM_Base_Init(&htim1);
	__HAL_TIM_SET_COUNTER(&htim1, 0);
	HAL_TIM_Base_Start_IT(&htim1);
}


// OverWrite
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) { // 제네레이트 없음
	if(htim->Instance == TIM1) {
		overflows++;
	}
}


uint32_t GetMicroSec(void){ // 제네레이트 없음
	uint32_t count = __HAL_TIM_GET_COUNTER(&htim1);
	uint32_t overflow = overflows;
	if (__HAL_TIM_GET_FLAG(&htim1, TIM_FLAG_UPDATE) && (count < 0x8000)) {
	        overflow++;
	}

	return(overflow << 16) + count;
}


float get_distance(void) {
	uint32_t start = GetMicroSec();
	HAL_Delay(100);
	uint32_t end = GetMicroSec();

	float ret = (end - start) * 0.034 / 2;

	return ret;
}




